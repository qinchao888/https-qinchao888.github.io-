<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTML基础知识</title>
    <url>/2022/05/27/HTML/index/</url>
    <content><![CDATA[<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多</p>
<p>内容很多内容很多内容很多内容很多</p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
  </entry>
  <entry>
    <title>Css基础知识</title>
    <url>/2022/05/27/Css/index/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Css</category>
      </categories>
  </entry>
  <entry>
    <title>复制内容</title>
    <url>/2022/06/06/JavaScript/clipboard/</url>
    <content><![CDATA[<h3 id="复制canvas图片和文本"><a href="#复制canvas图片和文本" class="headerlink" title="复制canvas图片和文本"></a>复制canvas图片和文本</h3><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注：</span></span><br><span class="line"><span class="comment"> * 1. 此方法具有兼容性问题，部分浏览器和低版本浏览器不支持</span></span><br><span class="line"><span class="comment"> * 2. Chrome 浏览器规定，只有 HTTPS 协议或localhost的页面才能使用navigator.clipboard这个API</span></span><br><span class="line"><span class="comment"> * 3. safari中只有https环境才能使用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 复制canvas图片</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">copyCanvasImg</span> = <span class="keyword">async</span> (<span class="params">canvasEl: HTMLCanvasElement</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">ClipboardItem</span> &amp;&amp; navigator.<span class="property">clipboard</span>.<span class="property">write</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">blob</span>: <span class="title class_">Blob</span> = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">      canvasEl.<span class="title function_">toBlob</span>(resolve);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">await</span> navigator.<span class="property">clipboard</span>.<span class="title function_">write</span>([<span class="keyword">new</span> <span class="variable language_">window</span>.<span class="title class_">ClipboardItem</span>(&#123; [blob.<span class="property">type</span>]: blob &#125;)]);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;复制成功！&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;复制失败！&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复制文本</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">copyText</span> = <span class="keyword">async</span> (<span class="params">text: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">ClipboardItem</span> &amp;&amp; navigator.<span class="property">clipboard</span>.<span class="property">writeText</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> navigator.<span class="property">clipboard</span>.<span class="title function_">writeText</span>(text);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;复制成功！&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;复制失败！&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect, useRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CopyCanvasImgDemo</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;&#123;&#125;&gt; = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canvasRef = useRef&lt;<span class="title class_">HTMLCanvasElement</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">drawImg</span>()</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">drawImg</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> context = canvasRef.<span class="property">current</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">    img.<span class="property">crossOrigin</span> = <span class="string">&#x27;anonymous&#x27;</span>;</span><br><span class="line">    img.<span class="property">src</span> = <span class="built_in">require</span>(<span class="string">&#x27;../../images/test.jpeg&#x27;</span>);</span><br><span class="line">    img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      context.<span class="title function_">drawImage</span>(img, <span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">copyImg</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">copyCanvasImg</span>(canvasRef.<span class="property">current</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">&#123;canvasRef&#125;</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;copyImg&#125;</span>&gt;</span>复制图片<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">CopyCanvasImgDemo</span>;</span><br></pre></td></tr></table></figure>

<h3 id="使用document-execCommand-‘copy’-实现复制"><a href="#使用document-execCommand-‘copy’-实现复制" class="headerlink" title="使用document.execCommand(‘copy’)实现复制"></a>使用document.execCommand(‘copy’)实现复制</h3><p>注：由于安全性问题，document.execCommand已废弃，建议使用navigator.clipboard替代</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此动作不可自动执行，必须存在页面交互才可</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">copy</span> = (<span class="params">node: HTMLElement</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> selection = <span class="variable language_">document</span>.<span class="title function_">getSelection</span>();</span><br><span class="line">  <span class="keyword">const</span> range = <span class="variable language_">document</span>.<span class="title function_">createRange</span>();</span><br><span class="line">  range.<span class="title function_">selectNodeContents</span>(node); <span class="comment">// 选择整个节点及其子节点</span></span><br><span class="line">  <span class="comment">// range.selectNode(node); // 选择子节点</span></span><br><span class="line">  selection.<span class="title function_">removeAllRanges</span>(); <span class="comment">// 此操作必须执行，否则将复制失败</span></span><br><span class="line">  selection.<span class="title function_">addRange</span>(range);</span><br><span class="line">  <span class="keyword">const</span> successful = <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>); <span class="comment">// </span></span><br><span class="line">  <span class="keyword">if</span> (successful) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;复制成功！&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;复制失败！&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>clipboardData: 操作剪贴板中的数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">clipboardData</span></span><br><span class="line">event.<span class="property">clipboardData</span></span><br></pre></td></tr></table></figure>

<p>相关的npm包：copy-to-clipboard</p>
<p><a href="https://www.ruanyifeng.com/blog/2021/01/clipboard-api.html">参考文档1</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1780940">参考文档2</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>开发技巧</title>
    <url>/2022/06/06/JavaScript/skill/</url>
    <content><![CDATA[<h3 id="使用clip隐藏定位元素"><a href="#使用clip隐藏定位元素" class="headerlink" title="使用clip隐藏定位元素"></a>使用clip隐藏定位元素</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">el.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span>;</span><br><span class="line">el.<span class="property">style</span>.<span class="property">top</span> = <span class="number">0</span>;</span><br><span class="line">el.<span class="property">style</span>.<span class="property">clip</span> = <span class="string">&#x27;rect(0, 0, 0, 0)&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>排序</title>
    <url>/2022/05/27/JavaScript/sort/</url>
    <content><![CDATA[<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 平均时间复杂度：O(n^2)</span></span><br><span class="line"><span class="comment"> * 有序情况下：O(n)，即在设置flag的情况下，发生数组有序则终止循环</span></span><br><span class="line"><span class="comment"> * 逆序情况下：n-1 + n-2 + .... 1 = n*(n - 1)/2，即为 O(n ^ 2)</span></span><br><span class="line"><span class="comment"> * 空间复杂度：O(1)</span></span><br><span class="line"><span class="comment"> * 两个临时变量（交换时的临时变量、flag），只需要常量级的临时空间，空间复杂度为 O(1)</span></span><br><span class="line"><span class="comment"> * 稳定性：稳定（即对于两个相等的元素，排序后的顺序与之前的顺序一致）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span> (arr) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.<span class="property">length</span> - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">var</span> temp = arr[j];</span><br><span class="line">        arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">        arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>React基础知识</title>
    <url>/2022/05/27/React/index/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>React</category>
      </categories>
  </entry>
  <entry>
    <title>TypeScript常用语法</title>
    <url>/2022/06/14/TypeScript/index/</url>
    <content><![CDATA[<h3 id="keyof-和-key-in"><a href="#keyof-和-key-in" class="headerlink" title="keyof 和 key in"></a>keyof 和 key in</h3><p>key in 用于取联合类型的值</p>
<p>keyof 是取 对象的键，可以是interface，也可以是type</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Info</span> = keyof <span class="title class_">Person</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">type Info = &#x27;name&#x27; | &#x27;age&#x27;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Animal</span> = <span class="string">&#x27;dog&#x27;</span> | <span class="string">&#x27;cat&#x27;</span> | <span class="string">&#x27;bird&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Test1</span> = &#123;</span><br><span class="line">  [key <span class="keyword">in</span> <span class="title class_">Animal</span>]: &#123;</span><br><span class="line">    <span class="attr">weight</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">type Test1 = &#123;</span></span><br><span class="line"><span class="comment">  dog: &#123;</span></span><br><span class="line"><span class="comment">    weight: string;</span></span><br><span class="line"><span class="comment">    age: number;</span></span><br><span class="line"><span class="comment">  &#125;;</span></span><br><span class="line"><span class="comment">  cat: &#123;</span></span><br><span class="line"><span class="comment">    weight: string;</span></span><br><span class="line"><span class="comment">    age: number;</span></span><br><span class="line"><span class="comment">  &#125;;</span></span><br><span class="line"><span class="comment">  bird: &#123;</span></span><br><span class="line"><span class="comment">    weight: string;</span></span><br><span class="line"><span class="comment">    age: number;</span></span><br><span class="line"><span class="comment">  &#125;;</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">不可使用interface，否则报错：A mapped type may not declare properties or methods</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Test2</span> = &#123;</span><br><span class="line">  [key <span class="keyword">in</span> keyof <span class="title class_">Person</span>]: <span class="built_in">string</span>[];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">type Test2 = &#123;</span></span><br><span class="line"><span class="comment">  name: string[];</span></span><br><span class="line"><span class="comment">  age: string[];</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TestType</span> = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">b</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T = keyof <span class="title class_">TestType</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">type T = &#x27;a&#x27; | &#x27;b&#x27;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>TypeScript</category>
      </categories>
  </entry>
  <entry>
    <title>VSCode配置</title>
    <url>/2022/06/10/VSCode/index/</url>
    <content><![CDATA[<h3 id="配置code命令"><a href="#配置code命令" class="headerlink" title="配置code命令"></a>配置code命令</h3><p>command + shift + p，输入 install，选择：Install ‘code’ command in PATH</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令行输入</span></span><br><span class="line">&gt; code test.txt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VSCode</category>
      </categories>
  </entry>
  <entry>
    <title>Webpack基础知识</title>
    <url>/2022/05/27/Webpack/index/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Webpack</category>
      </categories>
  </entry>
</search>
